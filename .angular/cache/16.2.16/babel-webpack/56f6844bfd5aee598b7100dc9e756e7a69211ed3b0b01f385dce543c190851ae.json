{"ast":null,"code":"import * as i0 from \"@angular/core\";\nlet DiaSemanaPipe = /*#__PURE__*/(() => {\n  class DiaSemanaPipe {\n    constructor() {\n      this.diasSemana = ['Domingo', 'Segunda-feira', 'Terça-feira', 'Quarta-feira', 'Quinta-feira', 'Sexta-feira', 'Sábado'];\n      this.diasSemanaAbrev = ['Dom', 'Seg', 'Ter', 'Qua', 'Qui', 'Sex', 'Sáb'];\n    }\n    /**\n     * Transforma uma data em nome do dia da semana em português\n     * @param value - Data a ser transformada\n     * @param abreviado - Se true, retorna versão abreviada (Dom, Seg, etc)\n     * @returns Nome do dia da semana em português\n     */\n    transform(value, abreviado = false) {\n      if (!value) return '';\n      const data = new Date(value);\n      const hoje = new Date();\n      const amanha = new Date(hoje);\n      amanha.setDate(hoje.getDate() + 1);\n      // Verifica se é hoje\n      if (this.isSameDay(data, hoje)) {\n        return 'Hoje';\n      }\n      // Verifica se é amanhã\n      if (this.isSameDay(data, amanha)) {\n        return 'Amanhã';\n      }\n      // Retorna o dia da semana\n      const diaSemana = data.getDay();\n      return abreviado ? this.diasSemanaAbrev[diaSemana] : this.diasSemana[diaSemana];\n    }\n    /**\n     * Verifica se duas datas são do mesmo dia\n     */\n    isSameDay(data1, data2) {\n      return data1.getDate() === data2.getDate() && data1.getMonth() === data2.getMonth() && data1.getFullYear() === data2.getFullYear();\n    }\n    static {\n      this.ɵfac = function DiaSemanaPipe_Factory(t) {\n        return new (t || DiaSemanaPipe)();\n      };\n    }\n    static {\n      this.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n        name: \"diaSemana\",\n        type: DiaSemanaPipe,\n        pure: true\n      });\n    }\n  }\n  return DiaSemanaPipe;\n})();\nexport { DiaSemanaPipe };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}