{"ast":null,"code":"import * as i0 from \"@angular/core\";\nlet HistoricoService = /*#__PURE__*/(() => {\n  class HistoricoService {\n    constructor() {\n      this.STORAGE_KEY = 'climaja_historico';\n      this.historico = [];\n      this.carregarHistorico();\n    }\n    /**\n     * Carrega o histórico do localStorage\n     */\n    carregarHistorico() {\n      const historicoSalvo = localStorage.getItem(this.STORAGE_KEY);\n      if (historicoSalvo) {\n        this.historico = JSON.parse(historicoSalvo).map(item => ({\n          ...item,\n          data: new Date(item.data)\n        }));\n      }\n    }\n    /**\n     * Salva o histórico no localStorage\n     */\n    salvarHistorico() {\n      localStorage.setItem(this.STORAGE_KEY, JSON.stringify(this.historico));\n    }\n    /**\n     * Adiciona um item ao histórico\n     */\n    adicionarItem(item) {\n      // Adiciona o novo item no início do array\n      this.historico.unshift(item);\n      // Mantém apenas os últimos 50 itens\n      if (this.historico.length > 50) {\n        this.historico = this.historico.slice(0, 50);\n      }\n      this.salvarHistorico();\n    }\n    /**\n     * Remove um item do histórico\n     */\n    removerItem(index) {\n      this.historico.splice(index, 1);\n      this.salvarHistorico();\n    }\n    /**\n     * Limpa todo o histórico\n     */\n    limparHistorico() {\n      this.historico = [];\n      this.salvarHistorico();\n    }\n    /**\n     * Obtém o histórico com paginação\n     */\n    obterHistoricoPaginado(pagina, itensPorPagina) {\n      const inicio = (pagina - 1) * itensPorPagina;\n      const fim = inicio + itensPorPagina;\n      return {\n        itens: this.historico.slice(inicio, fim),\n        totalItens: this.historico.length\n      };\n    }\n    /**\n     * Obtém todo o histórico\n     */\n    obterHistoricoCompleto() {\n      return [...this.historico];\n    }\n    static {\n      this.ɵfac = function HistoricoService_Factory(t) {\n        return new (t || HistoricoService)();\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: HistoricoService,\n        factory: HistoricoService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return HistoricoService;\n})();\nexport { HistoricoService };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}