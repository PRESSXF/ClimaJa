{"ast":null,"code":"import * as L from 'leaflet';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/clima.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@ionic/angular\";\nfunction MapasPage_p_38_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\")(1, \"strong\");\n    i0.ɵɵtext(2, \"Cidade:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.cidade, \"\");\n  }\n}\nfunction MapasPage_ion_card_39_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-card\", 31)(1, \"ion-card-header\")(2, \"ion-card-title\");\n    i0.ɵɵelement(3, \"ion-icon\", 32);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"ion-card-content\")(6, \"div\", 33)(7, \"div\", 34);\n    i0.ɵɵelement(8, \"ion-icon\", 35);\n    i0.ɵɵelementStart(9, \"span\");\n    i0.ɵɵtext(10);\n    i0.ɵɵpipe(11, \"number\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(12, \"div\", 34);\n    i0.ɵɵelement(13, \"ion-icon\", 35);\n    i0.ɵɵelementStart(14, \"span\");\n    i0.ɵɵtext(15);\n    i0.ɵɵpipe(16, \"number\");\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.localizacaoAtual.nome, \" \");\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate1(\"Lat: \", i0.ɵɵpipeBind2(11, 3, ctx_r1.localizacaoAtual.lat, \"1.4-4\"), \"\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\"Lng: \", i0.ɵɵpipeBind2(16, 6, ctx_r1.localizacaoAtual.lng, \"1.4-4\"), \"\");\n  }\n}\nfunction MapasPage_div_47_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 36)(1, \"div\", 37);\n    i0.ɵɵelement(2, \"div\", 38);\n    i0.ɵɵelementStart(3, \"span\");\n    i0.ɵɵtext(4, \"Muito Frio (< 0\\u00B0C)\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"div\", 37);\n    i0.ɵɵelement(6, \"div\", 39);\n    i0.ɵɵelementStart(7, \"span\");\n    i0.ɵɵtext(8, \"Frio (0-15\\u00B0C)\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"div\", 37);\n    i0.ɵɵelement(10, \"div\", 40);\n    i0.ɵɵelementStart(11, \"span\");\n    i0.ɵɵtext(12, \"Ameno (15-25\\u00B0C)\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(13, \"div\", 37);\n    i0.ɵɵelement(14, \"div\", 41);\n    i0.ɵɵelementStart(15, \"span\");\n    i0.ɵɵtext(16, \"Quente (25-35\\u00B0C)\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(17, \"div\", 37);\n    i0.ɵɵelement(18, \"div\", 42);\n    i0.ɵɵelementStart(19, \"span\");\n    i0.ɵɵtext(20, \"Muito Quente (> 35\\u00B0C)\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction MapasPage_div_48_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 43)(1, \"div\", 37);\n    i0.ɵɵelement(2, \"div\", 44);\n    i0.ɵɵelementStart(3, \"span\");\n    i0.ɵɵtext(4, \"Sem chuva\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"div\", 37);\n    i0.ɵɵelement(6, \"div\", 45);\n    i0.ɵɵelementStart(7, \"span\");\n    i0.ɵɵtext(8, \"Chuva leve\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"div\", 37);\n    i0.ɵɵelement(10, \"div\", 46);\n    i0.ɵɵelementStart(11, \"span\");\n    i0.ɵɵtext(12, \"Chuva moderada\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(13, \"div\", 37);\n    i0.ɵɵelement(14, \"div\", 38);\n    i0.ɵɵelementStart(15, \"span\");\n    i0.ɵɵtext(16, \"Chuva forte\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction MapasPage_div_49_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 47)(1, \"div\", 37);\n    i0.ɵɵelement(2, \"div\", 44);\n    i0.ɵɵelementStart(3, \"span\");\n    i0.ɵɵtext(4, \"C\\u00E9u limpo\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"div\", 37);\n    i0.ɵɵelement(6, \"div\", 48);\n    i0.ɵɵelementStart(7, \"span\");\n    i0.ɵɵtext(8, \"Parcialmente nublado\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"div\", 37);\n    i0.ɵɵelement(10, \"div\", 49);\n    i0.ɵɵelementStart(11, \"span\");\n    i0.ɵɵtext(12, \"Nublado\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(13, \"div\", 37);\n    i0.ɵɵelement(14, \"div\", 50);\n    i0.ɵɵelementStart(15, \"span\");\n    i0.ɵɵtext(16, \"Muito nublado\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction MapasPage_ion_icon_52_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ion-icon\", 51);\n  }\n}\nfunction MapasPage_ion_spinner_53_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ion-spinner\", 52);\n  }\n}\n// Corrigir ícones do Leaflet usando CDN\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon-2x.png',\n  iconUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon.png',\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png'\n});\nlet MapasPage = /*#__PURE__*/(() => {\n  class MapasPage {\n    constructor(climaService) {\n      this.climaService = climaService;\n      this.currentLayer = 'temp';\n      // Opções de camadas meteorológicas\n      this.layerOptions = [{\n        key: 'temp',\n        name: 'Temperatura',\n        icon: 'thermometer-outline'\n      }, {\n        key: 'precipitation',\n        name: 'Precipitação',\n        icon: 'rainy-outline'\n      }, {\n        key: 'pressure',\n        name: 'Pressão',\n        icon: 'speedometer-outline'\n      }, {\n        key: 'wind',\n        name: 'Vento',\n        icon: 'flag-outline'\n      }, {\n        key: 'clouds',\n        name: 'Nuvens',\n        icon: 'cloud-outline'\n      }];\n    }\n    ngAfterViewInit() {\n      // Aguardar um pouco para garantir que o DOM esteja pronto\n      setTimeout(() => {\n        this.initMap();\n      }, 100);\n    }\n    ngOnDestroy() {\n      if (this.map) {\n        this.map.remove();\n      }\n    }\n    initMap() {\n      try {\n        // Inicializar o mapa centrado no Brasil\n        this.map = L.map('map', {\n          center: [-15.7942, -47.8822],\n          zoom: 5,\n          zoomControl: true,\n          attributionControl: true\n        });\n        // Camada base OpenStreetMap\n        const baseLayer = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n          attribution: '© <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n          maxZoom: 18\n        });\n        baseLayer.addTo(this.map);\n        // Adicionar camada meteorológica inicial\n        this.addWeatherLayer(this.currentLayer);\n        // Adicionar alguns marcadores de exemplo para cidades importantes\n        this.addCityMarkers();\n        // Forçar redimensionamento do mapa\n        setTimeout(() => {\n          if (this.map) {\n            this.map.invalidateSize();\n          }\n        }, 200);\n      } catch (error) {\n        console.error('Erro ao inicializar o mapa:', error);\n      }\n    }\n    addWeatherLayer(layerType) {\n      if (!this.map) return;\n      // Remover camada anterior se existir\n      if (this.weatherLayer) {\n        this.map.removeLayer(this.weatherLayer);\n      }\n      // URLs das camadas meteorológicas do OpenWeatherMap\n      const layerUrls = {\n        temp: 'temp_new',\n        precipitation: 'precipitation_new',\n        pressure: 'pressure_new',\n        wind: 'wind_new',\n        clouds: 'clouds_new'\n      };\n      const layerUrl = layerUrls[layerType] || 'temp_new';\n      // Usar a API do OpenWeatherMap para camadas meteorológicas\n      this.weatherLayer = L.tileLayer(`https://tile.openweathermap.org/map/${layerUrl}/{z}/{x}/{y}.png?appid=0493ba0aca663cf9a780f6bf65b6af69`, {\n        opacity: 0.6,\n        attribution: 'Dados meteorológicos © <a href=\"https://openweathermap.org/\">OpenWeatherMap</a>',\n        maxZoom: 18\n      });\n      this.weatherLayer.addTo(this.map);\n    }\n    addCityMarkers() {\n      if (!this.map) return;\n      const cities = [{\n        name: 'São Paulo',\n        lat: -23.5505,\n        lng: -46.6333\n      }, {\n        name: 'Rio de Janeiro',\n        lat: -22.9068,\n        lng: -43.1729\n      }, {\n        name: 'Brasília',\n        lat: -15.7942,\n        lng: -47.8822\n      }, {\n        name: 'Salvador',\n        lat: -12.9714,\n        lng: -38.5014\n      }, {\n        name: 'Fortaleza',\n        lat: -3.7319,\n        lng: -38.5267\n      }, {\n        name: 'Belo Horizonte',\n        lat: -19.9191,\n        lng: -43.9386\n      }, {\n        name: 'Manaus',\n        lat: -3.1190,\n        lng: -60.0217\n      }, {\n        name: 'Curitiba',\n        lat: -25.4284,\n        lng: -49.2733\n      }];\n      cities.forEach(city => {\n        const marker = L.marker([city.lat, city.lng]).bindPopup(`<b>${city.name}</b><br>Clique para ver o clima`).on('click', () => {\n          this.showCityWeather(city.name);\n        });\n        marker.addTo(this.map);\n      });\n    }\n    showCityWeather(cityName) {\n      // Implementar popup com informações do clima da cidade\n      console.log(`Mostrando clima para: ${cityName}`);\n    }\n    changeLayer(layerType) {\n      this.currentLayer = layerType;\n      this.addWeatherLayer(layerType);\n    }\n    getCurrentLayerName() {\n      const layer = this.layerOptions.find(l => l.key === this.currentLayer);\n      return layer ? layer.name : 'Temperatura';\n    }\n    zoomToBrazil() {\n      if (this.map) {\n        this.map.setView([-15.7942, -47.8822], 5);\n      }\n    }\n    getCurrentLocation() {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(position => {\n          const lat = position.coords.latitude;\n          const lng = position.coords.longitude;\n          if (this.map) {\n            this.map.setView([lat, lng], 10);\n            L.marker([lat, lng]).bindPopup('Sua localização atual').addTo(this.map).openPopup();\n          }\n        }, error => {\n          console.error('Erro ao obter localização:', error);\n        });\n      }\n    }\n    static {\n      this.ɵfac = function MapasPage_Factory(t) {\n        return new (t || MapasPage)(i0.ɵɵdirectiveInject(i1.ClimaService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: MapasPage,\n        selectors: [[\"app-mapas\"]],\n        decls: 54,\n        vars: 15,\n        consts: [[3, \"translucent\"], [\"color\", \"primary\"], [\"slot\", \"start\"], [1, \"mapas-content\", 3, \"fullscreen\"], [\"collapse\", \"condense\"], [\"size\", \"large\"], [1, \"search-container\"], [\"placeholder\", \"Buscar cidade para visualizar no mapa\", \"show-clear-button\", \"focus\", \"debounce\", \"500\", 3, \"ngModel\", \"ngModelChange\", \"ionInput\"], [1, \"map-controls\"], [3, \"ngModel\", \"ngModelChange\", \"ionChange\"], [\"value\", \"temperatura\"], [\"name\", \"thermometer-outline\"], [\"value\", \"precipitacao\"], [\"name\", \"rainy-outline\"], [\"value\", \"nuvens\"], [\"name\", \"cloudy-outline\"], [1, \"map-container\"], [1, \"map-placeholder\"], [\"name\", \"map-outline\", \"size\", \"large\"], [4, \"ngIf\"], [\"class\", \"location-info\", 4, \"ngIf\"], [1, \"map-legend\"], [\"name\", \"information-circle-outline\"], [1, \"legend-content\", 3, \"ngSwitch\"], [\"class\", \"legend-temperature\", 4, \"ngSwitchCase\"], [\"class\", \"legend-precipitation\", 4, \"ngSwitchCase\"], [\"class\", \"legend-clouds\", 4, \"ngSwitchCase\"], [\"vertical\", \"bottom\", \"horizontal\", \"end\", \"slot\", \"fixed\"], [3, \"disabled\", \"click\"], [\"name\", \"locate-outline\", 4, \"ngIf\"], [\"name\", \"crescent\", 4, \"ngIf\"], [1, \"location-info\"], [\"name\", \"location-outline\"], [1, \"location-details\"], [1, \"detail-item\"], [\"name\", \"navigate-outline\"], [1, \"legend-temperature\"], [1, \"legend-item\"], [1, \"color-box\", 2, \"background\", \"#0000ff\"], [1, \"color-box\", 2, \"background\", \"#00ffff\"], [1, \"color-box\", 2, \"background\", \"#00ff00\"], [1, \"color-box\", 2, \"background\", \"#ffff00\"], [1, \"color-box\", 2, \"background\", \"#ff0000\"], [1, \"legend-precipitation\"], [1, \"color-box\", 2, \"background\", \"#ffffff\", \"border\", \"1px solid #ccc\"], [1, \"color-box\", 2, \"background\", \"#87ceeb\"], [1, \"color-box\", 2, \"background\", \"#4169e1\"], [1, \"legend-clouds\"], [1, \"color-box\", 2, \"background\", \"#d3d3d3\"], [1, \"color-box\", 2, \"background\", \"#808080\"], [1, \"color-box\", 2, \"background\", \"#2f4f4f\"], [\"name\", \"locate-outline\"], [\"name\", \"crescent\"]],\n        template: function MapasPage_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"ion-header\", 0)(1, \"ion-toolbar\", 1)(2, \"ion-buttons\", 2);\n            i0.ɵɵelement(3, \"ion-menu-button\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(4, \"ion-title\");\n            i0.ɵɵtext(5, \"Mapas Meteorol\\u00F3gicos\");\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(6, \"ion-content\", 3)(7, \"ion-header\", 4)(8, \"ion-toolbar\")(9, \"ion-title\", 5);\n            i0.ɵɵtext(10, \"Mapas\");\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(11, \"div\", 6)(12, \"ion-searchbar\", 7);\n            i0.ɵɵlistener(\"ngModelChange\", function MapasPage_Template_ion_searchbar_ngModelChange_12_listener($event) {\n              return ctx.cidade = $event;\n            })(\"ionInput\", function MapasPage_Template_ion_searchbar_ionInput_12_listener($event) {\n              return ctx.onSearchInput($event);\n            });\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(13, \"div\", 8)(14, \"ion-segment\", 9);\n            i0.ɵɵlistener(\"ngModelChange\", function MapasPage_Template_ion_segment_ngModelChange_14_listener($event) {\n              return ctx.tipoMapa = $event;\n            })(\"ionChange\", function MapasPage_Template_ion_segment_ionChange_14_listener() {\n              return ctx.alterarTipoMapa();\n            });\n            i0.ɵɵelementStart(15, \"ion-segment-button\", 10);\n            i0.ɵɵelement(16, \"ion-icon\", 11);\n            i0.ɵɵelementStart(17, \"ion-label\");\n            i0.ɵɵtext(18, \"Temperatura\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(19, \"ion-segment-button\", 12);\n            i0.ɵɵelement(20, \"ion-icon\", 13);\n            i0.ɵɵelementStart(21, \"ion-label\");\n            i0.ɵɵtext(22, \"Chuva\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(23, \"ion-segment-button\", 14);\n            i0.ɵɵelement(24, \"ion-icon\", 15);\n            i0.ɵɵelementStart(25, \"ion-label\");\n            i0.ɵɵtext(26, \"Nuvens\");\n            i0.ɵɵelementEnd()()()();\n            i0.ɵɵelementStart(27, \"div\", 16)(28, \"div\", 17);\n            i0.ɵɵelement(29, \"ion-icon\", 18);\n            i0.ɵɵelementStart(30, \"h3\");\n            i0.ɵɵtext(31, \"Mapa Meteorol\\u00F3gico\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(32, \"p\");\n            i0.ɵɵtext(33, \"Visualiza\\u00E7\\u00E3o de dados clim\\u00E1ticos por regi\\u00E3o\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(34, \"p\")(35, \"strong\");\n            i0.ɵɵtext(36, \"Tipo selecionado:\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtext(37);\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(38, MapasPage_p_38_Template, 4, 1, \"p\", 19);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵtemplate(39, MapasPage_ion_card_39_Template, 17, 9, \"ion-card\", 20);\n            i0.ɵɵelementStart(40, \"ion-card\", 21)(41, \"ion-card-header\")(42, \"ion-card-title\");\n            i0.ɵɵelement(43, \"ion-icon\", 22);\n            i0.ɵɵtext(44);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(45, \"ion-card-content\")(46, \"div\", 23);\n            i0.ɵɵtemplate(47, MapasPage_div_47_Template, 21, 0, \"div\", 24);\n            i0.ɵɵtemplate(48, MapasPage_div_48_Template, 17, 0, \"div\", 25);\n            i0.ɵɵtemplate(49, MapasPage_div_49_Template, 17, 0, \"div\", 26);\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(50, \"ion-fab\", 27)(51, \"ion-fab-button\", 28);\n            i0.ɵɵlistener(\"click\", function MapasPage_Template_ion_fab_button_click_51_listener() {\n              return ctx.obterLocalizacaoAtual();\n            });\n            i0.ɵɵtemplate(52, MapasPage_ion_icon_52_Template, 1, 0, \"ion-icon\", 29);\n            i0.ɵɵtemplate(53, MapasPage_ion_spinner_53_Template, 1, 0, \"ion-spinner\", 30);\n            i0.ɵɵelementEnd()()();\n          }\n          if (rf & 2) {\n            i0.ɵɵproperty(\"translucent\", true);\n            i0.ɵɵadvance(6);\n            i0.ɵɵproperty(\"fullscreen\", true);\n            i0.ɵɵadvance(6);\n            i0.ɵɵproperty(\"ngModel\", ctx.cidade);\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"ngModel\", ctx.tipoMapa);\n            i0.ɵɵadvance(23);\n            i0.ɵɵtextInterpolate1(\" \", ctx.getTipoMapaLabel(), \"\");\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx.cidade);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx.localizacaoAtual);\n            i0.ɵɵadvance(5);\n            i0.ɵɵtextInterpolate1(\" Legenda - \", ctx.getTipoMapaLabel(), \" \");\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"ngSwitch\", ctx.tipoMapa);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngSwitchCase\", \"temperatura\");\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngSwitchCase\", \"precipitacao\");\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngSwitchCase\", \"nuvens\");\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"disabled\", ctx.carregandoLocalizacao);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", !ctx.carregandoLocalizacao);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx.carregandoLocalizacao);\n          }\n        },\n        dependencies: [i2.NgIf, i2.NgSwitch, i2.NgSwitchCase, i3.NgControlStatus, i3.NgModel, i4.IonButtons, i4.IonCard, i4.IonCardContent, i4.IonCardHeader, i4.IonCardTitle, i4.IonContent, i4.IonFab, i4.IonFabButton, i4.IonHeader, i4.IonIcon, i4.IonLabel, i4.IonMenuButton, i4.IonSearchbar, i4.IonSegment, i4.IonSegmentButton, i4.IonSpinner, i4.IonTitle, i4.IonToolbar, i4.SelectValueAccessor, i4.TextValueAccessor, i2.DecimalPipe],\n        styles: [\"@charset \\\"UTF-8\\\";.custom-header[_ngcontent-%COMP%]   ion-toolbar[_ngcontent-%COMP%]{--background: var(--ion-color-primary);--color: var(--ion-color-primary-contrast)}.custom-header[_ngcontent-%COMP%]   .header-title[_ngcontent-%COMP%]{display:flex;align-items:center;gap:8px}.custom-header[_ngcontent-%COMP%]   .header-title[_ngcontent-%COMP%]   .header-icon[_ngcontent-%COMP%]{font-size:1.2em}.map-container[_ngcontent-%COMP%]{height:100%;width:100%;position:absolute;top:0;left:0;z-index:1}.layer-controls[_ngcontent-%COMP%]{position:absolute;top:16px;right:16px;z-index:2;padding:12px;border-radius:8px;background:rgba(var(--ion-background-color-rgb),.9);box-shadow:0 2px 8px #0003}.layer-controls[_ngcontent-%COMP%]   .layer-header[_ngcontent-%COMP%]{display:flex;align-items:center;gap:8px;margin-bottom:8px}.layer-controls[_ngcontent-%COMP%]   .layer-header[_ngcontent-%COMP%]   ion-icon[_ngcontent-%COMP%]{font-size:1.2em}.layer-controls[_ngcontent-%COMP%]   .layer-buttons[_ngcontent-%COMP%]{display:flex;gap:8px;flex-wrap:wrap}.layer-controls[_ngcontent-%COMP%]   .layer-buttons[_ngcontent-%COMP%]   .layer-btn[_ngcontent-%COMP%]{--padding-start: 8px;--padding-end: 8px}.navigation-controls[_ngcontent-%COMP%]{position:absolute;bottom:24px;right:16px;z-index:2;padding:8px;border-radius:8px;background:rgba(var(--ion-background-color-rgb),.9);box-shadow:0 2px 8px #0003;display:flex;flex-direction:column;gap:8px}.navigation-controls[_ngcontent-%COMP%]   .nav-btn[_ngcontent-%COMP%]{margin:0;--padding-start: 8px;--padding-end: 8px}.legend[_ngcontent-%COMP%]{position:absolute;bottom:24px;left:16px;z-index:2;padding:12px;border-radius:8px;background:rgba(var(--ion-background-color-rgb),.9);box-shadow:0 2px 8px #0003;min-width:200px}.legend[_ngcontent-%COMP%]   .legend-header[_ngcontent-%COMP%]{display:flex;align-items:center;gap:8px;margin-bottom:8px;font-weight:500}.legend[_ngcontent-%COMP%]   .legend-header[_ngcontent-%COMP%]   ion-icon[_ngcontent-%COMP%]{font-size:1.2em}.legend[_ngcontent-%COMP%]   .legend-content[_ngcontent-%COMP%]   .legend-item[_ngcontent-%COMP%]{display:flex;align-items:center;gap:8px;margin-bottom:4px}.legend[_ngcontent-%COMP%]   .legend-content[_ngcontent-%COMP%]   .legend-item[_ngcontent-%COMP%]   .legend-color[_ngcontent-%COMP%]{width:24px;height:12px;border-radius:2px}.temp-scale[_ngcontent-%COMP%]{background:linear-gradient(to right,#2b83ba,#abdda4,#ffffbf,#fdae61,#d7191c)}.precip-scale[_ngcontent-%COMP%]{background:linear-gradient(to right,#f7fbff,#deebf7,#c6dbef,#9ecae1,#6baed6,#4292c6,#2171b5,#084594)}.pressure-scale[_ngcontent-%COMP%]{background:linear-gradient(to right,#8c510a,#d8b365,#f6e8c3,#c7eae5,#5ab4ac,#01665e)}.wind-scale[_ngcontent-%COMP%]{background:linear-gradient(to right,#ffeda0,#feb24c,#f03b20)}.clouds-scale[_ngcontent-%COMP%]{background:linear-gradient(to right,#f7f7f7,#cccccc,#969696,#636363,#252525)}.loading-overlay[_ngcontent-%COMP%]{position:absolute;inset:0;z-index:3;display:flex;flex-direction:column;justify-content:center;align-items:center;background:rgba(var(--ion-background-color-rgb),.8);gap:16px}.loading-overlay[_ngcontent-%COMP%]   ion-spinner[_ngcontent-%COMP%]{width:48px;height:48px}.glass-effect[_ngcontent-%COMP%]{backdrop-filter:blur(8px);-webkit-backdrop-filter:blur(8px);border:1px solid rgba(255,255,255,.1)}\"]\n      });\n    }\n  }\n  return MapasPage;\n})();\nexport { MapasPage };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}