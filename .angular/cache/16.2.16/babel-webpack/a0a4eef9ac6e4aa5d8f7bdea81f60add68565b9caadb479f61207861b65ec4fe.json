{"ast":null,"code":"import { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ClimaService = /*#__PURE__*/(() => {\n  class ClimaService {\n    constructor(http) {\n      this.http = http;\n      // URL base da API OpenWeatherMap\n      this.apiUrl = environment.apiUrl;\n      this.apiKey = environment.apiKey;\n    }\n    /**\r\n     * Obtém o clima atual para uma cidade específica\r\n     * @param cidade Nome da cidade\r\n     * @returns Observable com os dados do clima atual\r\n     */\n    getClimaAtual(cidade) {\n      const url = `${this.apiUrl}/weather?q=${cidade}&appid=${this.apiKey}&units=metric&lang=pt_br`;\n      return this.http.get(url);\n    }\n    /**\r\n     * Obtém a previsão do tempo para 5 dias\r\n     * @param cidade Nome da cidade\r\n     * @returns Observable com os dados da previsão\r\n     */\n    getPrevisao5Dias(cidade) {\n      const url = `${this.apiUrl}/forecast?q=${cidade}&appid=${this.apiKey}&units=metric&lang=pt_br`;\n      return this.http.get(url);\n    }\n    /**\r\n     * Obtém o clima atual por coordenadas geográficas\r\n     * @param lat Latitude\r\n     * @param lon Longitude\r\n     * @returns Observable com os dados do clima\r\n     */\n    getClimaPorCoordenadas(lat, lon) {\n      const url = `${this.apiUrl}/weather?lat=${lat}&lon=${lon}&appid=${this.apiKey}&units=metric&lang=pt_br`;\n      return this.http.get(url);\n    }\n    static {\n      this.ɵfac = function ClimaService_Factory(t) {\n        return new (t || ClimaService)(i0.ɵɵinject(i1.HttpClient));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: ClimaService,\n        factory: ClimaService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return ClimaService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}