{"ast":null,"code":"import * as i0 from \"@angular/core\";\nlet ToggleDirective = /*#__PURE__*/(() => {\n  class ToggleDirective {\n    constructor(el) {\n      this.el = el;\n      this.isVisible = true;\n    }\n    onClick() {\n      const targetElement = document.getElementById(this.targetId);\n      if (targetElement) {\n        this.isVisible = !this.isVisible;\n        targetElement.style.display = this.isVisible ? 'block' : 'none';\n        // Atualiza o ícone se existir\n        const icon = this.el.nativeElement.querySelector('ion-icon');\n        if (icon) {\n          icon.name = this.isVisible ? 'chevron-up' : 'chevron-down';\n        }\n      }\n    }\n    static {\n      this.ɵfac = function ToggleDirective_Factory(t) {\n        return new (t || ToggleDirective)(i0.ɵɵdirectiveInject(i0.ElementRef));\n      };\n    }\n    static {\n      this.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n        type: ToggleDirective,\n        selectors: [[\"\", \"appToggle\", \"\"]],\n        hostBindings: function ToggleDirective_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"click\", function ToggleDirective_click_HostBindingHandler() {\n              return ctx.onClick();\n            });\n          }\n        },\n        inputs: {\n          targetId: [\"appToggle\", \"targetId\"]\n        }\n      });\n    }\n  }\n  return ToggleDirective;\n})();\nexport { ToggleDirective };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}