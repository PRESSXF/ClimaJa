{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/clima.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nfunction CurrentWeatherComponent_div_0_div_29_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 16)(1, \"p\", 17);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"img\", 18);\n    i0.ɵɵelementStart(5, \"p\", 19);\n    i0.ɵɵtext(6);\n    i0.ɵɵpipe(7, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"button\", 15);\n    i0.ɵɵlistener(\"click\", function CurrentWeatherComponent_div_0_div_29_Template_button_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const forecast_r2 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r3.verDetalhes(forecast_r2));\n    });\n    i0.ɵɵtext(9, \"Ver Detalhes\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const forecast_r2 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(3, 4, forecast_r2.dt_txt, \"dd/MM\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"src\", ctx_r1.getIconeClima(forecast_r2.weather[0].icon), i0.ɵɵsanitizeUrl)(\"alt\", forecast_r2.weather[0].description);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind2(7, 7, forecast_r2.main.temp, \"1.0-0\"), \"\\u00B0C\");\n  }\n}\nfunction CurrentWeatherComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2)(2, \"h1\", 3);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 4)(5, \"span\", 5);\n    i0.ɵɵtext(6);\n    i0.ɵɵpipe(7, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\", 6);\n    i0.ɵɵelement(9, \"img\", 7);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(10, \"p\", 8);\n    i0.ɵɵtext(11);\n    i0.ɵɵpipe(12, \"titlecase\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"p\", 9);\n    i0.ɵɵtext(14);\n    i0.ɵɵpipe(15, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"div\", 10)(17, \"div\", 11);\n    i0.ɵɵtext(18, \" Umidade: \");\n    i0.ɵɵelementStart(19, \"span\");\n    i0.ɵɵtext(20);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(21, \"div\", 11);\n    i0.ɵɵtext(22, \" Vento: \");\n    i0.ɵɵelementStart(23, \"span\");\n    i0.ɵɵtext(24);\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(25, \"div\", 12)(26, \"h2\");\n    i0.ɵɵtext(27, \"Previs\\u00E3o para os pr\\u00F3ximos 5 dias\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(28, \"div\", 13);\n    i0.ɵɵtemplate(29, CurrentWeatherComponent_div_0_div_29_Template, 10, 10, \"div\", 14);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(30, \"button\", 15);\n    i0.ɵɵlistener(\"click\", function CurrentWeatherComponent_div_0_Template_button_click_30_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.definirLocalizacaoAtual());\n    });\n    i0.ɵɵtext(31, \"Definir como Localiza\\u00E7\\u00E3o Atual\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r0.climaAtual.name);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind2(7, 9, ctx_r0.climaAtual.main.temp, \"1.0-0\"), \"\\u00B0C\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"src\", ctx_r0.getIconeClima(ctx_r0.climaAtual.weather[0].icon), i0.ɵɵsanitizeUrl)(\"alt\", ctx_r0.climaAtual.weather[0].description);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(12, 12, ctx_r0.climaAtual.weather[0].description), \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" Sensa\\u00E7\\u00E3o t\\u00E9rmica \", i0.ɵɵpipeBind2(15, 14, ctx_r0.climaAtual.main.feels_like, \"1.0-0\"), \"\\u00B0C \");\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r0.climaAtual.main.humidity, \"% de umidade\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r0.climaAtual.wind.speed, \" m/s de velocidade do vento\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.forecastData);\n  }\n}\nlet CurrentWeatherComponent = /*#__PURE__*/(() => {\n  class CurrentWeatherComponent {\n    constructor(climaService, router) {\n      this.climaService = climaService;\n      this.router = router;\n      this.definirLocalizacao = new EventEmitter();\n      this.forecastData = [];\n    }\n    ngOnInit() {\n      if (this.climaAtual) {\n        this.climaService.getPrevisao(this.climaAtual.name).subscribe(data => {\n          this.forecastData = data.list;\n        });\n      }\n    }\n    getIconeClima(icone) {\n      return `https://openweathermap.org/img/wn/${icone}@2x.png`;\n    }\n    verDetalhes(forecast) {\n      this.router.navigate(['/detalhes-clima'], {\n        queryParams: {\n          cidade: this.climaAtual.name,\n          data: forecast.dt_txt\n        }\n      });\n    }\n    onDefinirLocalizacaoAtual() {\n      this.definirLocalizacao.emit(this.climaAtual);\n    }\n    static {\n      this.ɵfac = function CurrentWeatherComponent_Factory(t) {\n        return new (t || CurrentWeatherComponent)(i0.ɵɵdirectiveInject(i1.ClimaService), i0.ɵɵdirectiveInject(i2.Router));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: CurrentWeatherComponent,\n        selectors: [[\"app-current-weather\"]],\n        inputs: {\n          climaAtual: \"climaAtual\"\n        },\n        outputs: {\n          definirLocalizacao: \"definirLocalizacao\"\n        },\n        decls: 1,\n        vars: 1,\n        consts: [[\"class\", \"current-weather\", 4, \"ngIf\"], [1, \"current-weather\"], [1, \"location-section\"], [1, \"city-name\"], [1, \"temperature-section\"], [1, \"temperature-display\"], [1, \"weather-icon-container\"], [1, \"main-weather-icon\", 3, \"src\", \"alt\"], [1, \"weather-description\"], [1, \"feels-like\"], [1, \"details-section\"], [1, \"detail-item\"], [1, \"forecast-section\"], [1, \"forecast-list\"], [\"class\", \"forecast-item\", 4, \"ngFor\", \"ngForOf\"], [3, \"click\"], [1, \"forecast-item\"], [1, \"forecast-date\"], [3, \"src\", \"alt\"], [1, \"forecast-temp\"]],\n        template: function CurrentWeatherComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵtemplate(0, CurrentWeatherComponent_div_0_Template, 32, 17, \"div\", 0);\n          }\n          if (rf & 2) {\n            i0.ɵɵproperty(\"ngIf\", ctx.climaAtual);\n          }\n        },\n        dependencies: [i3.NgForOf, i3.NgIf, i3.DecimalPipe, i3.TitleCasePipe, i3.DatePipe],\n        styles: [\".current-weather[_ngcontent-%COMP%]{margin-top:20px;padding:20px;border-radius:10px;background-color:#ffffff1a;box-shadow:0 4px 6px #0000001a;color:#fff}.current-weather[_ngcontent-%COMP%]   .location-section[_ngcontent-%COMP%]{text-align:center}.current-weather[_ngcontent-%COMP%]   .location-section[_ngcontent-%COMP%]   .city-name[_ngcontent-%COMP%]{font-size:2em;margin-bottom:5px}.current-weather[_ngcontent-%COMP%]   .location-section[_ngcontent-%COMP%]   .temperature-section[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center}.current-weather[_ngcontent-%COMP%]   .location-section[_ngcontent-%COMP%]   .temperature-section[_ngcontent-%COMP%]   .temperature-display[_ngcontent-%COMP%]{font-size:3em;margin-right:10px}.current-weather[_ngcontent-%COMP%]   .location-section[_ngcontent-%COMP%]   .temperature-section[_ngcontent-%COMP%]   .weather-icon-container[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:70px;height:70px}.current-weather[_ngcontent-%COMP%]   .location-section[_ngcontent-%COMP%]   .weather-description[_ngcontent-%COMP%]{font-style:italic;margin-bottom:10px}.current-weather[_ngcontent-%COMP%]   .location-section[_ngcontent-%COMP%]   .feels-like[_ngcontent-%COMP%]{font-size:.9em}.current-weather[_ngcontent-%COMP%]   .location-section[_ngcontent-%COMP%]   .details-section[_ngcontent-%COMP%]{display:flex;justify-content:space-around;margin-top:15px}.current-weather[_ngcontent-%COMP%]   .location-section[_ngcontent-%COMP%]   .details-section[_ngcontent-%COMP%]   .detail-item[_ngcontent-%COMP%]{font-size:.8em}\"]\n      });\n    }\n  }\n  return CurrentWeatherComponent;\n})();\nexport { CurrentWeatherComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}