{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/fabio/Desktop/Projetos de Marlon Desenvolvimento Mobile/climaja-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet HistoricoClimaPage = class HistoricoClimaPage {\n  constructor(historicoService, router, alertController) {\n    this.historicoService = historicoService;\n    this.router = router;\n    this.alertController = alertController;\n    this.historico = [];\n    this.Math = Math; // Para usar Math no template\n    // Paginação - Configurado para 3 páginas com 10 itens cada (total 30 itens)\n    this.paginaAtual = 1;\n    this.itensPorPagina = 10; // 10 itens por página = 3 páginas para 30 itens total\n    this.totalItens = 0;\n  }\n  ngOnInit() {\n    this.carregarHistorico();\n  }\n  ionViewWillEnter() {\n    this.carregarHistorico();\n  }\n  /**\n   * Carrega o histórico de buscas\n   */\n  carregarHistorico() {\n    const resultado = this.historicoService.obterHistoricoPaginado(this.paginaAtual, this.itensPorPagina);\n    this.historico = resultado.itens;\n    this.totalItens = resultado.totalItens;\n  }\n  /**\n   * Formata a data para exibição\n   */\n  formatarData(data) {\n    if (typeof data === 'string') {\n      data = new Date(data);\n    }\n    const agora = new Date();\n    const dataItem = new Date(data);\n    const diff = agora.getTime() - dataItem.getTime();\n    const segundos = Math.floor(diff / 1000);\n    const minutos = Math.floor(segundos / 60);\n    const horas = Math.floor(minutos / 60);\n    const dias = Math.floor(horas / 24);\n    if (dias > 0) {\n      return `${dias} ${dias === 1 ? 'dia' : 'dias'} atrás`;\n    } else if (horas > 0) {\n      return `${horas} ${horas === 1 ? 'hora' : 'horas'} atrás`;\n    } else if (minutos > 0) {\n      return `${minutos} ${minutos === 1 ? 'minuto' : 'minutos'} atrás`;\n    } else {\n      return 'Agora mesmo';\n    }\n  }\n  /**\n   * Retorna o ícone apropriado baseado na descrição do clima\n   */\n  getWeatherIcon(descricao) {\n    const desc = descricao.toLowerCase();\n    if (desc.includes('sol') || desc.includes('limpo')) {\n      return 'sunny';\n    } else if (desc.includes('chuva')) {\n      return 'rainy';\n    } else if (desc.includes('nuvem') || desc.includes('nublado')) {\n      return 'cloudy';\n    } else if (desc.includes('neve')) {\n      return 'snow';\n    } else if (desc.includes('trovão') || desc.includes('tempestade')) {\n      return 'thunderstorm';\n    } else if (desc.includes('vento')) {\n      return 'wind';\n    }\n    return 'partly-sunny';\n  }\n  /**\n   * Gera array com números das páginas para paginação\n   * Limitado a 3 páginas conforme solicitado\n   */\n  getPageNumbers() {\n    const totalPaginas = Math.ceil(this.totalItens / this.itensPorPagina);\n    const maxPaginas = Math.min(totalPaginas, 3); // Máximo de 3 páginas\n    const paginas = [];\n    for (let i = 1; i <= maxPaginas; i++) {\n      paginas.push(i);\n    }\n    return paginas;\n  }\n  /**\n   * Manipula a mudança de página\n   */\n  onPageChange(pagina) {\n    this.paginaAtual = pagina;\n    this.carregarHistorico();\n  }\n  /**\n   * Remove um item específico do histórico\n   */\n  removerItem(index) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const alert = yield _this.alertController.create({\n        header: 'Confirmar exclusão',\n        message: 'Deseja remover este item do histórico?',\n        buttons: [{\n          text: 'Cancelar',\n          role: 'cancel'\n        }, {\n          text: 'Remover',\n          handler: () => {\n            const inicio = (_this.paginaAtual - 1) * _this.itensPorPagina;\n            const indiceReal = inicio + index;\n            _this.historicoService.removerItem(indiceReal);\n            _this.carregarHistorico();\n          }\n        }]\n      });\n      yield alert.present();\n    })();\n  }\n  /**\n   * Confirma e limpa todo o histórico\n   */\n  confirmarLimparHistorico() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const alert = yield _this2.alertController.create({\n        header: 'Limpar histórico',\n        message: 'Tem certeza que deseja limpar todo o histórico de buscas?',\n        buttons: [{\n          text: 'Cancelar',\n          role: 'cancel'\n        }, {\n          text: 'Limpar',\n          handler: () => {\n            _this2.limparHistorico();\n          }\n        }]\n      });\n      yield alert.present();\n    })();\n  }\n  /**\n   * Limpa todo o histórico\n   */\n  limparHistorico() {\n    this.historicoService.limparHistorico();\n    this.carregarHistorico();\n  }\n  /**\n   * Navega para a página de detalhes\n   */\n  verDetalhes(cidade) {\n    this.router.navigate(['/detalhes-clima', encodeURIComponent(cidade)]);\n  }\n  trackByHistoricoFn(index, item) {\n    return item.data;\n  }\n  trackByPageNumbersFn(index, item) {\n    return item;\n  }\n};\nHistoricoClimaPage = __decorate([Component({\n  selector: 'app-historico-clima',\n  templateUrl: './historico-clima.page.html',\n  styleUrls: ['./historico-clima.page.scss']\n})], HistoricoClimaPage);\nexport { HistoricoClimaPage };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}