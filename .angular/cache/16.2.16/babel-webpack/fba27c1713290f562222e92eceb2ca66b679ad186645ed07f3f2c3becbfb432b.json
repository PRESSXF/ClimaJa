{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport let TemperaturaPipe = /*#__PURE__*/(() => {\n  class TemperaturaPipe {\n    /**\r\n     * Pipe personalizado para formatação de temperatura\r\n     * @param value Valor da temperatura\r\n     * @param unidade Unidade de medida ('C' para Celsius, 'F' para Fahrenheit)\r\n     * @param mostrarUnidade Se deve mostrar a unidade (°C ou °F)\r\n     * @returns Temperatura formatada\r\n     */\n    transform(value, unidade = 'C', mostrarUnidade = true) {\n      if (value === null || value === undefined) {\n        return '--';\n      }\n      let temperatura = value;\n      let simboloUnidade = '';\n      // Converte para Fahrenheit se necessário\n      if (unidade.toUpperCase() === 'F') {\n        temperatura = value * 9 / 5 + 32;\n        simboloUnidade = '°F';\n      } else {\n        simboloUnidade = '°C';\n      }\n      // Arredonda para uma casa decimal\n      const temperaturaFormatada = Math.round(temperatura * 10) / 10;\n      // Retorna com ou sem a unidade\n      if (mostrarUnidade) {\n        return `${temperaturaFormatada}${simboloUnidade}`;\n      } else {\n        return temperaturaFormatada.toString();\n      }\n    }\n    static {\n      this.ɵfac = function TemperaturaPipe_Factory(t) {\n        return new (t || TemperaturaPipe)();\n      };\n    }\n    static {\n      this.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n        name: \"temperatura\",\n        type: TemperaturaPipe,\n        pure: true\n      });\n    }\n  }\n  return TemperaturaPipe;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}