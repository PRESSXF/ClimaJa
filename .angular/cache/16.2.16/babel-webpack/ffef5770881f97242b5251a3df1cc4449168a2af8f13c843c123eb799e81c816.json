{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/fabio/Desktop/Projetos de Marlon Desenvolvimento Mobile/climaja-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/clima.service\";\nimport * as i3 from \"../services/localizacao.service\";\nimport * as i4 from \"@ionic/angular\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"../pipes/temperatura.pipe\";\nimport * as i7 from \"../pipes/dia-semana.pipe\";\nfunction ForecastPage_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15)(1, \"h1\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4, \"Previs\\u00E3o estendida para os pr\\u00F3ximos dias\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.localizacaoAtual);\n  }\n}\nfunction ForecastPage_ng_template_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 16);\n  }\n}\nfunction ForecastPage_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵelement(1, \"ion-spinner\", 18);\n    i0.ɵɵelementStart(2, \"p\");\n    i0.ɵɵtext(3, \"Carregando previs\\u00E3o...\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction ForecastPage_div_14_ion_card_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-card\", 21)(1, \"ion-card-content\")(2, \"div\", 22)(3, \"div\", 23)(4, \"h2\");\n    i0.ɵɵtext(5);\n    i0.ɵɵpipe(6, \"diaSemana\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"p\");\n    i0.ɵɵtext(8);\n    i0.ɵɵpipe(9, \"date\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(10, \"div\", 24);\n    i0.ɵɵelement(11, \"img\", 25);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"div\", 26)(13, \"div\", 27)(14, \"span\", 28);\n    i0.ɵɵtext(15);\n    i0.ɵɵpipe(16, \"temperatura\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(17, \"div\", 29)(18, \"span\", 30);\n    i0.ɵɵtext(19);\n    i0.ɵɵpipe(20, \"temperatura\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"span\", 31);\n    i0.ɵɵtext(22, \"/\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(23, \"span\", 32);\n    i0.ɵɵtext(24);\n    i0.ɵɵpipe(25, \"temperatura\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(26, \"div\", 33)(27, \"p\", 34);\n    i0.ɵɵtext(28);\n    i0.ɵɵpipe(29, \"titlecase\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(30, \"div\", 35)(31, \"div\", 36);\n    i0.ɵɵelement(32, \"ion-icon\", 37);\n    i0.ɵɵelementStart(33, \"span\");\n    i0.ɵɵtext(34);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(35, \"div\", 36);\n    i0.ɵɵelement(36, \"ion-icon\", 38);\n    i0.ɵɵelementStart(37, \"span\");\n    i0.ɵɵtext(38);\n    i0.ɵɵpipe(39, \"number\");\n    i0.ɵɵelementEnd()()()()()();\n  }\n  if (rf & 2) {\n    const previsao_r8 = ctx.$implicit;\n    const i_r9 = ctx.index;\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵstyleProp(\"animation-delay\", i_r9 * 0.1 + \"s\");\n    i0.ɵɵclassProp(\"animate-item\", true);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(6, 14, previsao_r8.data));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(9, 16, previsao_r8.data, \"dd/MM\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"src\", ctx_r7.getIconeClima(previsao_r8.icone), i0.ɵɵsanitizeUrl)(\"alt\", previsao_r8.descricao);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind1(16, 19, previsao_r8.temperatura), \" \\u00B0C\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind1(20, 21, previsao_r8.tempMin), \" \\u00B0C\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind1(25, 23, previsao_r8.tempMax), \" \\u00B0C\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(29, 25, previsao_r8.descricao));\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate1(\"\", previsao_r8.umidade, \"%\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind2(39, 27, previsao_r8.velocidadeVento, \"1.1-1\"), \" m/s\");\n  }\n}\nfunction ForecastPage_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtemplate(1, ForecastPage_div_14_ion_card_1_Template, 40, 30, \"ion-card\", 20);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.previsoesPaginadas)(\"ngForTrackBy\", ctx_r4.trackByFn);\n  }\n}\nfunction ForecastPage_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 39)(1, \"div\", 40)(2, \"ion-button\", 41);\n    i0.ɵɵlistener(\"click\", function ForecastPage_div_15_Template_ion_button_click_2_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.mudarPagina(ctx_r10.paginaAtual - 1));\n    });\n    i0.ɵɵelement(3, \"ion-icon\", 42);\n    i0.ɵɵtext(4, \" Anterior \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 43)(6, \"span\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"ion-button\", 41);\n    i0.ɵɵlistener(\"click\", function ForecastPage_div_15_Template_ion_button_click_8_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.mudarPagina(ctx_r12.paginaAtual + 1));\n    });\n    i0.ɵɵtext(9, \" Pr\\u00F3ximo \");\n    i0.ɵɵelement(10, \"ion-icon\", 44);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", ctx_r5.paginaAtual === 1);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate2(\"\", ctx_r5.paginaAtual, \" de \", ctx_r5.totalPaginas, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", ctx_r5.paginaAtual === ctx_r5.totalPaginas);\n  }\n}\nfunction ForecastPage_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 45)(1, \"ion-card\", 46)(2, \"ion-card-content\")(3, \"div\", 47);\n    i0.ɵɵelement(4, \"ion-icon\", 48);\n    i0.ɵɵelementStart(5, \"h2\");\n    i0.ɵɵtext(6, \"Nenhuma previs\\u00E3o encontrada\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"p\");\n    i0.ɵɵtext(8, \"N\\u00E3o foi poss\\u00EDvel carregar a previs\\u00E3o para esta cidade.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"ion-button\", 49);\n    i0.ɵɵlistener(\"click\", function ForecastPage_div_16_Template_ion_button_click_9_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.carregarPrevisao(ctx_r13.localizacaoAtual));\n    });\n    i0.ɵɵelement(10, \"ion-icon\", 50);\n    i0.ɵɵtext(11, \" Tentar novamente \");\n    i0.ɵɵelementEnd()()()()();\n  }\n}\nlet ForecastPage = /*#__PURE__*/(() => {\n  class ForecastPage {\n    constructor(route, climaService, localizacaoService, loadingCtrl) {\n      this.route = route;\n      this.climaService = climaService;\n      this.localizacaoService = localizacaoService;\n      this.loadingCtrl = loadingCtrl;\n      this.cidade = '';\n      this.previsao5Dias = [];\n      this.paginaAtual = 1;\n      this.itensPorPagina = 7;\n      this.carregando = false;\n      this.localizacaoAtual = null;\n    }\n    ngOnInit() {\n      this.carregarLocalizacaoAtual();\n    }\n    /**\n     * Carrega a localização atual salva\n     */\n    carregarLocalizacaoAtual() {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        _this.localizacaoService.obterLocalizacaoAtualSalva().subscribe(cidade => {\n          if (cidade) {\n            _this.localizacaoAtual = cidade;\n            _this.carregarPrevisao(cidade);\n          } else {\n            _this.localizacaoAtual = null;\n            _this.previsao5Dias = [];\n          }\n        });\n      })();\n    }\n    /**\n     * Carrega a previsão do tempo para os próximos 7 dias\n     */\n    carregarPrevisao(cidade) {\n      var _this2 = this;\n      return _asyncToGenerator(function* () {\n        const loading = yield _this2.loadingCtrl.create({\n          message: 'Carregando previsão...',\n          spinner: 'crescent'\n        });\n        yield loading.present();\n        try {\n          _this2.carregando = true;\n          const dados = yield _this2.climaService.getPrevisao(cidade).toPromise();\n          // Agrupa previsões por dia e calcula médias\n          const previsoesPorDia = new Map();\n          dados.list.forEach(previsao => {\n            const data = new Date(previsao.dt * 1000);\n            const dataKey = data.toISOString().split('T')[0];\n            if (!previsoesPorDia.has(dataKey)) {\n              previsoesPorDia.set(dataKey, {\n                data: data,\n                temperaturas: [previsao.main.temp],\n                tempMin: previsao.main.temp_min,\n                tempMax: previsao.main.temp_max,\n                descricoes: [previsao.weather[0].description],\n                icones: [previsao.weather[0].icon],\n                umidades: [previsao.main.humidity],\n                velocidadesVento: [previsao.wind.speed]\n              });\n            } else {\n              const dia = previsoesPorDia.get(dataKey);\n              dia.temperaturas.push(previsao.main.temp);\n              dia.tempMin = Math.min(dia.tempMin, previsao.main.temp_min);\n              dia.tempMax = Math.max(dia.tempMax, previsao.main.temp_max);\n              dia.descricoes.push(previsao.weather[0].description);\n              dia.icones.push(previsao.weather[0].icon);\n              dia.umidades.push(previsao.main.humidity);\n              dia.velocidadesVento.push(previsao.wind.speed);\n            }\n          });\n          // Converte para formato final e completa para 7 dias\n          const previsoes = [];\n          const hoje = new Date();\n          for (let i = 0; i < 7; i++) {\n            const dataAtual = new Date(hoje);\n            dataAtual.setDate(hoje.getDate() + i);\n            const dataKey = dataAtual.toISOString().split('T')[0];\n            if (previsoesPorDia.has(dataKey)) {\n              const dia = previsoesPorDia.get(dataKey);\n              previsoes.push({\n                data: dataAtual,\n                temperatura: Math.round(dia.temperaturas.reduce((a, b) => a + b, 0) / dia.temperaturas.length),\n                tempMin: Math.round(dia.tempMin),\n                tempMax: Math.round(dia.tempMax),\n                descricao: _this2.getMostFrequent(dia.descricoes),\n                icone: _this2.getMostFrequent(dia.icones),\n                umidade: Math.round(dia.umidades.reduce((a, b) => a + b, 0) / dia.umidades.length),\n                velocidadeVento: Math.round(dia.velocidadesVento.reduce((a, b) => a + b, 0) / dia.velocidadesVento.length * 10) / 10\n              });\n            } else {\n              // Gera dados estimados para dias sem previsão\n              previsoes.push(_this2.gerarPrevisaoEstimada(dataAtual, i));\n            }\n          }\n          _this2.previsao5Dias = previsoes;\n        } catch (erro) {\n          console.error('Erro ao carregar previsão:', erro);\n          // Em caso de erro, gera dados de exemplo para demonstração\n          _this2.gerarDadosExemplo();\n        } finally {\n          _this2.carregando = false;\n          yield loading.dismiss();\n        }\n      })();\n    }\n    /**\n     * Retorna o item mais frequente em um array\n     */\n    getMostFrequent(arr) {\n      const frequency = {};\n      let maxCount = 0;\n      let mostFrequent = arr[0];\n      arr.forEach(item => {\n        frequency[item] = (frequency[item] || 0) + 1;\n        if (frequency[item] > maxCount) {\n          maxCount = frequency[item];\n          mostFrequent = item;\n        }\n      });\n      return mostFrequent;\n    }\n    /**\n     * Gera previsão estimada para dias sem dados da API\n     */\n    gerarPrevisaoEstimada(data, diaIndex) {\n      const condicoesClima = [{\n        descricao: 'céu limpo',\n        icone: '01d',\n        temp: 25\n      }, {\n        descricao: 'poucas nuvens',\n        icone: '02d',\n        temp: 23\n      }, {\n        descricao: 'nuvens dispersas',\n        icone: '03d',\n        temp: 21\n      }, {\n        descricao: 'nublado',\n        icone: '04d',\n        temp: 19\n      }, {\n        descricao: 'chuva leve',\n        icone: '10d',\n        temp: 18\n      }];\n      const condicao = condicoesClima[diaIndex % condicoesClima.length];\n      const variacao = Math.random() * 6 - 3; // -3 a +3 graus de variação\n      return {\n        data: data,\n        temperatura: Math.round(condicao.temp + variacao),\n        tempMin: Math.round(condicao.temp + variacao - 5),\n        tempMax: Math.round(condicao.temp + variacao + 5),\n        descricao: condicao.descricao,\n        icone: condicao.icone,\n        umidade: Math.round(50 + Math.random() * 40),\n        velocidadeVento: Math.round((2 + Math.random() * 8) * 10) / 10 // 2-10 m/s\n      };\n    }\n    /**\n     * Gera dados de exemplo para demonstração\n     */\n    gerarDadosExemplo() {\n      const hoje = new Date();\n      this.previsao5Dias = [];\n      for (let i = 0; i < 7; i++) {\n        const data = new Date(hoje);\n        data.setDate(hoje.getDate() + i);\n        this.previsao5Dias.push(this.gerarPrevisaoEstimada(data, i));\n      }\n    }\n    /**\n     * Retorna o ícone do clima baseado no código fornecido pela API\n     */\n    getIconeClima(codigo) {\n      return `https://openweathermap.org/img/wn/${codigo}@2x.png`;\n    }\n    /**\n     * Retorna as previsões da página atual\n     */\n    get previsoesPaginadas() {\n      const inicio = (this.paginaAtual - 1) * this.itensPorPagina;\n      const fim = inicio + this.itensPorPagina;\n      return this.previsao5Dias.slice(inicio, fim);\n    }\n    /**\n     * Retorna o número total de páginas\n     */\n    get totalPaginas() {\n      return Math.ceil(this.previsao5Dias.length / this.itensPorPagina);\n    }\n    /**\n     * Muda para a página especificada\n     */\n    mudarPagina(pagina) {\n      if (pagina >= 1 && pagina <= this.totalPaginas) {\n        this.paginaAtual = pagina;\n      }\n    }\n    /**\n     * Atualiza os dados da previsão\n     */\n    atualizar(event) {\n      var _this3 = this;\n      return _asyncToGenerator(function* () {\n        if (_this3.localizacaoAtual) {\n          yield _this3.carregarPrevisao(_this3.localizacaoAtual);\n        }\n        event.target.complete();\n      })();\n    }\n    trackByFn(index, item) {\n      return item.data;\n    }\n    static {\n      this.ɵfac = function ForecastPage_Factory(t) {\n        return new (t || ForecastPage)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.ClimaService), i0.ɵɵdirectiveInject(i3.LocalizacaoService), i0.ɵɵdirectiveInject(i4.LoadingController));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: ForecastPage,\n        selectors: [[\"app-forecast\"]],\n        decls: 19,\n        vars: 8,\n        consts: [[1, \"custom-header\", 3, \"translucent\"], [\"slot\", \"start\"], [\"defaultHref\", \"/home\"], [1, \"header-title\"], [\"name\", \"calendar-outline\", 1, \"header-icon\"], [1, \"forecast-content\", 3, \"fullscreen\"], [1, \"forecast-background\"], [\"class\", \"city-header glass-effect\", 4, \"ngIf\", \"ngIfElse\"], [\"noLocation\", \"\"], [\"class\", \"loading-container\", 4, \"ngIf\"], [\"class\", \"forecast-list\", 4, \"ngIf\"], [\"class\", \"pagination-container glass-effect\", 4, \"ngIf\"], [\"class\", \"empty-state\", 4, \"ngIf\"], [\"slot\", \"fixed\", 3, \"ionRefresh\"], [\"pullingIcon\", \"chevron-down-circle-outline\", \"pullingText\", \"Puxe para atualizar\", \"refreshingSpinner\", \"crescent\", \"refreshingText\", \"Atualizando...\"], [1, \"city-header\", \"glass-effect\"], [1, \"no-location-message\", \"glass-effect\"], [1, \"loading-container\"], [\"name\", \"crescent\"], [1, \"forecast-list\"], [\"class\", \"forecast-card glass-effect\", 3, \"animate-item\", \"animation-delay\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [1, \"forecast-card\", \"glass-effect\"], [1, \"forecast-item\"], [1, \"date-section\"], [1, \"weather-icon-section\"], [1, \"weather-icon\", 3, \"src\", \"alt\"], [1, \"temperature-section\"], [1, \"temp-main\"], [1, \"temp-value\"], [1, \"temp-range\"], [1, \"temp-min\"], [1, \"temp-separator\"], [1, \"temp-max\"], [1, \"description-section\"], [1, \"weather-description\"], [1, \"details-section\"], [1, \"detail-item\"], [\"name\", \"water-outline\"], [\"name\", \"speedometer-outline\"], [1, \"pagination-container\", \"glass-effect\"], [1, \"pagination-controls\"], [\"fill\", \"clear\", 3, \"disabled\", \"click\"], [\"name\", \"chevron-back-outline\"], [1, \"page-info\"], [\"name\", \"chevron-forward-outline\"], [1, \"empty-state\"], [1, \"empty-card\", \"glass-effect\"], [1, \"empty-content\"], [\"name\", \"cloud-offline-outline\", 1, \"empty-icon\"], [\"fill\", \"outline\", 3, \"click\"], [\"name\", \"refresh-outline\", \"slot\", \"start\"]],\n        template: function ForecastPage_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"ion-header\", 0)(1, \"ion-toolbar\")(2, \"ion-buttons\", 1);\n            i0.ɵɵelement(3, \"ion-back-button\", 2);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(4, \"ion-title\")(5, \"div\", 3);\n            i0.ɵɵelement(6, \"ion-icon\", 4);\n            i0.ɵɵtext(7, \" Previs\\u00E3o 7 Dias \");\n            i0.ɵɵelementEnd()()()();\n            i0.ɵɵelementStart(8, \"ion-content\", 5);\n            i0.ɵɵelement(9, \"div\", 6);\n            i0.ɵɵtemplate(10, ForecastPage_div_10_Template, 5, 1, \"div\", 7);\n            i0.ɵɵtemplate(11, ForecastPage_ng_template_11_Template, 1, 0, \"ng-template\", null, 8, i0.ɵɵtemplateRefExtractor);\n            i0.ɵɵtemplate(13, ForecastPage_div_13_Template, 4, 0, \"div\", 9);\n            i0.ɵɵtemplate(14, ForecastPage_div_14_Template, 2, 2, \"div\", 10);\n            i0.ɵɵtemplate(15, ForecastPage_div_15_Template, 11, 4, \"div\", 11);\n            i0.ɵɵtemplate(16, ForecastPage_div_16_Template, 12, 0, \"div\", 12);\n            i0.ɵɵelementStart(17, \"ion-refresher\", 13);\n            i0.ɵɵlistener(\"ionRefresh\", function ForecastPage_Template_ion_refresher_ionRefresh_17_listener($event) {\n              return ctx.atualizar($event);\n            });\n            i0.ɵɵelement(18, \"ion-refresher-content\", 14);\n            i0.ɵɵelementEnd()();\n          }\n          if (rf & 2) {\n            const _r1 = i0.ɵɵreference(12);\n            i0.ɵɵproperty(\"translucent\", true);\n            i0.ɵɵadvance(8);\n            i0.ɵɵproperty(\"fullscreen\", true);\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"ngIf\", ctx.localizacaoAtual)(\"ngIfElse\", _r1);\n            i0.ɵɵadvance(3);\n            i0.ɵɵproperty(\"ngIf\", ctx.carregando);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", !ctx.carregando && ctx.previsao5Dias.length > 0);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", !ctx.carregando && ctx.totalPaginas > 1);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", !ctx.carregando && ctx.previsao5Dias.length === 0);\n          }\n        },\n        dependencies: [i5.NgForOf, i5.NgIf, i4.IonButton, i4.IonButtons, i4.IonCard, i4.IonCardContent, i4.IonContent, i4.IonHeader, i4.IonIcon, i4.IonRefresher, i4.IonRefresherContent, i4.IonSpinner, i4.IonTitle, i4.IonToolbar, i4.IonBackButton, i5.DecimalPipe, i5.TitleCasePipe, i5.DatePipe, i6.TemperaturaPipe, i7.DiaSemanaPipe],\n        styles: [\"[_nghost-%COMP%]{--ion-background-color: var(--background-primary);color:var(--text-primary)}.forecast-content[_ngcontent-%COMP%]{background:var(--background-primary);color:var(--text-primary)}.city-header[_ngcontent-%COMP%]{background:var(--background-card);color:var(--text-primary);border-radius:var(--card-border-radius);padding:16px;margin:12px;text-align:center;font-weight:600}.forecast-card[_ngcontent-%COMP%]{background:var(--background-card);color:var(--text-primary);border-radius:var(--card-border-radius);margin:12px;padding:16px;box-shadow:var(--glass-shadow)}.forecast-item[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:center}.date-section[_ngcontent-%COMP%], .weather-icon-section[_ngcontent-%COMP%], .temperature-section[_ngcontent-%COMP%], .description-section[_ngcontent-%COMP%], .details-section[_ngcontent-%COMP%]{color:var(--text-primary)}.temperature-section[_ngcontent-%COMP%]   .temp-main[_ngcontent-%COMP%]{font-weight:700;font-size:1.5em;color:var(--text-primary)}.temperature-section[_ngcontent-%COMP%]   .temp-range[_ngcontent-%COMP%]{color:var(--text-secondary)}.description-section[_ngcontent-%COMP%]{font-style:italic;color:var(--text-secondary)}.details-section[_ngcontent-%COMP%]   .detail-item[_ngcontent-%COMP%]{background:var(--background-secondary);border-radius:var(--card-border-radius-small);padding:4px 8px;margin:0 4px;color:var(--text-primary);display:inline-flex;align-items:center}.details-section[_ngcontent-%COMP%]   .detail-item[_ngcontent-%COMP%]   ion-icon[_ngcontent-%COMP%]{margin-right:4px;color:var(--ion-color-primary)}.pagination-container[_ngcontent-%COMP%]{background:var(--background-card);border-radius:var(--card-border-radius);margin:12px;padding:8px;text-align:center;color:var(--text-primary)}.pagination-controls[_ngcontent-%COMP%]   ion-button[_ngcontent-%COMP%]{color:var(--ion-color-primary)}.empty-state[_ngcontent-%COMP%], .loading-container[_ngcontent-%COMP%]{color:var(--text-primary)}.empty-card[_ngcontent-%COMP%]{background:var(--background-card);color:var(--text-primary);border-radius:var(--card-border-radius);padding:16px;margin:12px;text-align:center}.empty-icon[_ngcontent-%COMP%]{font-size:3em;margin-bottom:8px}\"]\n      });\n    }\n  }\n  return ForecastPage;\n})();\nexport { ForecastPage };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}